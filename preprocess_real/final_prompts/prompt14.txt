
Your task is to select EXACTLY the context parts needed to implement the test scenarios for the provided code.

**Rules:**
1. Analyze the code under test and test scenarios carefully
2. Select context parts that contain:
   - Data structures, required for implementing test scenarios
   - Functions / methods of classes, required for implementing test scenarios
   - Any other information, required for implementing test scenarios
3. Exclude:
   - Unrelated components (even if similar)
   - Low-level implementation details
   - Duplicate information
4. Return ONLY Python list of selected part numbers, like [1, 3, 4]

**Code to test:**
package com.commerce.backend.service;
@Service
public class TokenServiceImpl implements TokenService {
    private static final int EXPIRY_DATE = 60 * 24;
    private final UserService userService;
    private final PasswordEncoder passwordEncoder;
    private final ApplicationEventPublisher eventPublisher;
    private final VerificationTokenRepository verificationTokenRepository;
    private final PasswordForgotTokenRepository passwordForgotTokenRepository;
    @Autowired
    public TokenServiceImpl(UserService userService,
                            PasswordEncoder passwordEncoder,
                            ApplicationEventPublisher eventPublisher,
                            VerificationTokenRepository verificationTokenRepository,
                            PasswordForgotTokenRepository passwordForgotTokenRepository) {
        this.userService = userService;
        this.passwordEncoder = passwordEncoder;
        this.eventPublisher = eventPublisher;
        this.verificationTokenRepository = verificationTokenRepository;
        this.passwordForgotTokenRepository = passwordForgotTokenRepository;
    }
    @Override
    public void createEmailConfirmToken(User user) {
        String token = UUID.randomUUID().toString();
        VerificationToken verificationToken = new VerificationToken();
        verificationToken.setToken(token);
        verificationToken.setUser(user);
        verificationToken.setExpiryDate(calculateExpiryDate());
        verificationTokenRepository.save(verificationToken);
        eventPublisher.publishEvent(new OnRegistrationCompleteEvent(user, token));
    }
    @Override
    public void createPasswordResetToken(String email) {
        User user = userService.findByEmail(email);
        if (Objects.isNull(user)) {
            return;
        }

        PasswordForgotToken passwordForgotToken = passwordForgotTokenRepository.findByUser(user)
                .orElse(null);
        if (Objects.isNull(passwordForgotToken)) {
            passwordForgotToken = new PasswordForgotToken();
            passwordForgotToken.setUser(user);
        }

        String token = UUID.randomUUID().toString();
        passwordForgotToken.setToken(token);
        passwordForgotToken.setExpiryDate(calculateExpiryDate());
        passwordForgotTokenRepository.save(passwordForgotToken);

        eventPublisher.publishEvent(new OnPasswordForgotRequestEvent(user, token));
    }
    @Override
    public void validateEmail(String token) {
        VerificationToken verificationToken = verificationTokenRepository.findByToken(token)
                .orElseThrow(() -> new ResourceNotFoundException("Null verification token"));


        User user = verificationToken.getUser();

        if (Objects.isNull(user)) {
            throw new ResourceNotFoundException("User not found");
        }

        checkTokenExpire(verificationToken.getExpiryDate());

        user.setEmailVerified(1);
        verificationTokenRepository.delete(verificationToken);
        userService.saveUser(user);
    }
    @Override
    public void validateForgotPasswordConfirm(String token) {
        PasswordForgotToken passwordForgotToken = passwordForgotTokenRepository.findByToken(token)
                .orElseThrow(() -> new ResourceNotFoundException("Token not found"));

        checkTokenExpire(passwordForgotToken.getExpiryDate());
    }
    @Override
    public void validateForgotPassword(PasswordForgotValidateRequest passwordForgotValidateRequest) {
        PasswordForgotToken passwordForgotToken = passwordForgotTokenRepository.findByToken(passwordForgotValidateRequest.getToken())
                .orElseThrow(() -> new ResourceNotFoundException("Token not found"));

        User user = passwordForgotToken.getUser();

        if (Objects.isNull(user)) {
            throw new ResourceNotFoundException("User not found");
        }

        checkTokenExpire(passwordForgotToken.getExpiryDate());

        if (passwordEncoder.matches(passwordForgotValidateRequest.getNewPassword(), user.getPassword())) {
            return;
        }

        user.setPassword(passwordEncoder.encode(passwordForgotValidateRequest.getNewPassword()));
        userService.saveUser(user);
        passwordForgotTokenRepository.delete(passwordForgotToken);
    }
    private Date calculateExpiryDate() {
        Calendar cal = Calendar.getInstance();
        cal.setTime(new Timestamp(cal.getTime().getTime()));
        cal.add(Calendar.MINUTE, TokenServiceImpl.EXPIRY_DATE);
        return new Date(cal.getTime().getTime());
    }
    private void checkTokenExpire(Date date) {
        if ((date.getTime() - Calendar.getInstance().getTime().getTime()) <= 0) {
            throw new InvalidArgumentException("Token is expired");
        }

    }
}

**Test scenarios (5 total):**
0) Verify that the system creates an email confirmation token and publishes a registration complete event when provided a valid user
Steps: Given a registered user exists with an unverified email
When the system is requested to create an email confirmation token for that user
Then a unique token should be generated with an appropriate expiry date
And the token should be saved in the verification token repository
And a registration complete event should be published with the generated token

1) Verify that the system creates a password reset token and publishes a password forgot event when a valid email is provided
Steps: Given a registered user exists with a valid email address
When the system is requested to create a password reset token for that email
Then the user should be retrieved from the system
And a unique password reset token should be generated with a proper expiry date
And the token should be saved in the password reset token repository
And a password forgot request event should be published with the generated token

2) Verify that no password reset token is created when a non-existing email is provided
Steps: Given no user exists in the system with the provided email address
When the system is requested to create a password reset token for that email
Then the system should not generate any token
And no password reset token should be saved
And no password forgot request event should be published

3) Verify that the system validates an email confirmation token by marking the email as verified and deleting the token
Steps: Given a valid email confirmation token exists and is linked to a registered user
When the system is requested to validate the email using the token
Then the system should confirm that the token has not expired
And the userâ€™s email verification flag should be updated to verified
And the email confirmation token should be removed from the repository
And the updated user information should be saved

4) Verify that the system updates the user's password when a valid forgot password token is provided with a new password different from the current one
Steps: Given a valid, non-expired password reset token exists linked to a registered user
And a password reset request is prepared with a new password that does not match the current password
When the system is requested to update the password using the forgot password validation process
Then the system should confirm that the token has not expired
And the new password should be encoded and set for the user
And the updated user information should be saved
And the used password reset token should be deleted from the repository



**Context parts (0-65):**

=== Part 0 ===
package jakarta.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.TYPE})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Table {
    java.lang.String name() default ""
}

=== Part 1 ===
package javax.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.TYPE})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Table {
    java.lang.String name() default ""
}

=== Part 2 ===
package io.quarkus.cli.plugin;
@CommandLine.Command(name = "list", aliases = "ls", header = "List CLI plugins. ")
public class CliPluginsList extends CliPluginsBase implements Callable<Integer> {
}

=== Part 3 ===
package io.quarkus.cli;
@CommandLine.Command(name = "quarkus", subcommands = {
        Create.class,
        Build.class,
        Dev.class,
        Run.class,
        Test.class,
        Config.class,
        ProjectExtensions.class,
        Image.class,
        Deploy.class,
        Registry.class,
        Info.class,
        Update.class,
        Version.class,
        CliPlugins.class,
        Completion.class }, scope = ScopeType.INHERIT, sortOptions = false, showDefaultValues = true, versionProvider = Version.class, subcommandsRepeatable = false, mixinStandardHelpOptions = false, commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", optionListHeading = "Options:%n", headerHeading = "%n", parameterListHeading = "%n")
public class QuarkusCli implements QuarkusApplication, Callable<Integer> {
    @CommandLine.Mixin(name = "output")
    OutputOptionMixin output;
    public OutputOptionMixin getOutput() { return output; }
}

=== Part 4 ===
package org.springframework.security.crypto.password;
public interface PasswordEncoder {
    java.lang.String encode(java.lang.CharSequence charSequence)
    boolean matches(java.lang.CharSequence charSequence, java.lang.String s)
}

=== Part 5 ===
package io.quarkus.arc.impl;
/**
 * This code was mainly copied from Weld codebase.
 */
class TypeResolver {
    private final Map<TypeVariable<?>, Type> resolvedTypeVariables;
    public TypeResolver(Map<TypeVariable<?>, Type> resolvedTypeVariables) {
        this.resolvedTypeVariables = resolvedTypeVariables;
    }
    public Map<TypeVariable<?>, Type> getResolvedTypeVariables()
}

=== Part 6 ===
package com.commerce.backend.dao;
@Repository
public interface VerificationTokenRepository extends CrudRepository<VerificationToken, Long> {
    Optional<VerificationToken> findByToken(String token)
}

=== Part 7 ===
package io.quarkus.cli.deploy;
@CommandLine.Command(name = "minikube", sortOptions = false, showDefaultValues = true, mixinStandardHelpOptions = false, header = "Perform the deploy action on minikube.", description = "%n"
        + "The command will deploy the application on minikube.", footer = "%n"
                + "For example (using default values), it will create a Deployment named '<project.artifactId>' using the image with REPOSITORY='${user.name}/<project.artifactId>' and TAG='<project.version>' and will deploy it to the target cluster.", headerHeading = "%n", commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", parameterListHeading = "%n", optionListHeading = "Options:%n")
public class Minikube extends BaseKubernetesDeployCommand {
}

=== Part 8 ===
Class `com.commerce.backend.model.entity.Color` declaration:
@Entity
@Table(name = "color")
public class Color
The class uses the following imports:
- from package com.commerce.backend.model.entity: ProductVariant
The class has following members:
public methods:
- Color()
- void setId(Long id)
- void setProductVariantList(List<ProductVariant> productVariantList)
- void setName(String name)
- void setHex(String hex)


=== Part 9 ===
package jakarta.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Id {
}

=== Part 10 ===
package io.quarkus.arc.impl;
final class TypeCachePollutionUtils {
    static boolean isParameterizedType(final Object o) {
        //Check for ParameterizedTypeImpl first, as it's very likely going
        //to be one; this prevents some cases of type cache pollution (see JDK-8180450).
        if (o instanceof ParameterizedTypeImpl) {
            return true;
        }
        return (o instanceof ParameterizedType);
    }
    static ParameterizedType asParameterizedType(final Object o) {
        //Check for ParameterizedTypeImpl first, as it's very likely going
        //to be one; this prevents some cases of type cache pollution (see JDK-8180450).
        if (o instanceof ParameterizedTypeImpl) {
            //N.B. it's crucial for the purposes of this optimisation that
            //we cast the to concrete type, not to the interface.
            return (ParameterizedTypeImpl) o;
        }
        return (ParameterizedType) o;
    }
}

=== Part 11 ===
Class `org.springframework.samples.petclinic.visits.model.Visit` declaration:
@Entity
@Table(name = "visits")
@Builder(builderMethodName = "visit")
public class Visit
The class has following members:
public methods:
- Visit(Integer id,Date date,String description,int petId)
- Visit()
- void setId(Integer id)
- void setDate(Date date)
- void setDescription(String description)
- void setPetId(int petId)
- Integer getId()
- Date getDate()
- String getDescription()
- int getPetId()
fields:
- @Column(name = "pet_id")
    private int petId;


=== Part 12 ===
package io.quarkus.cli.deploy;
@CommandLine.Command(name = "minikube", sortOptions = false, showDefaultValues = true, mixinStandardHelpOptions = false, header = "Perform the deploy action on minikube.", description = "%n"
        + "The command will deploy the application on minikube.", footer = "%n"
                + "For example (using default values), it will create a Deployment named '<project.artifactId>' using the image with REPOSITORY='${user.name}/<project.artifactId>' and TAG='<project.version>' and will deploy it to the target cluster.", headerHeading = "%n", commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", parameterListHeading = "%n", optionListHeading = "Options:%n")
public class Minikube extends BaseKubernetesDeployCommand {
}

=== Part 13 ===
package io.quarkus.cli;
@CommandLine.Command(name = "version", header = "Display CLI version information.", hidden = true)
public class Version implements CommandLine.IVersionProvider, Callable<Integer> {
}

=== Part 14 ===
Class `CartItem` declaration:
@Entity
@Table(name = "cart_item")
public class CartItem
The class uses the following imports:
- from package com.commerce.backend.model.entity: ProductVariant, Cart
The class has following members:
public methods:
- CartItem()
- void setId(Long id)
- void setCart(Cart cart)
- void setProductVariant(ProductVariant productVariant)
- void setAmount(Integer amount)


=== Part 15 ===
Class `org.springframework.samples.petclinic.api.dto.VisitDetails` declaration:
public class VisitDetails
The class has following members:
public methods:
- Integer getId()
- Integer getPetId()
- String getDate()
- String getDescription()
fields:
- private Integer petId = null;


=== Part 16 ===
package javax.persistence;
@java.lang.annotation.Documented
@java.lang.annotation.Target({java.lang.annotation.ElementType.TYPE})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Entity {
}

=== Part 17 ===
package com.commerce.backend.validator;
public class PasswordMatchesValidator implements ConstraintValidator<PasswordMatches, Object> {
}

=== Part 18 ===
package com.commerce.backend.service;
@Service
public class UserServiceImpl implements UserService {
    @Autowired
    public UserServiceImpl(UserRepository userRepository,
                           PasswordEncoder passwordEncoder,
                           UserResponseConverter userResponseConverter)
}

=== Part 19 ===
package com.commerce.backend.converter.user;
@Component
public class UserResponseConverter implements Function<User, UserResponse> {
}

=== Part 20 ===
package com.commerce.backend.dao;
@Repository
public interface PasswordForgotTokenRepository extends CrudRepository<PasswordForgotToken, Long> {
    Optional<PasswordForgotToken> findByToken(String token)
    Optional<PasswordForgotToken> findByUser(User user)
}

=== Part 21 ===
package org.springframework.samples.petclinic.customers.model;
/**
 * Repository class for <code>Pet</code> domain objects All method names are compliant with Spring Data naming
 * conventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation

 */
public interface PetRepository extends JpaRepository<Pet, Integer> {
/**
     * Retrieve all {@link PetType}s from the data store.
     * @return a Collection of {@link PetType}s.
     */
        @Query("SELECT ptype FROM PetType ptype ORDER BY ptype.name") List<PetType> findPetTypes()
    @Query("FROM PetType ptype WHERE ptype.id = :typeId") Optional<PetType> findPetTypeById(@Param("typeId") int typeId)
}

=== Part 22 ===
package jakarta.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface GeneratedValue {
    jakarta.persistence.GenerationType strategy() default jakarta.persistence.GenerationType.AUTO
}

=== Part 23 ===
package com.commerce.backend.service;
public interface UserService {
    User saveUser(User user)
    User findByEmail(String email)
}

=== Part 24 ===
package io.quarkus.cli;
@CommandLine.Command(name = "extension", aliases = {
        "ext" }, header = "Configure extensions of an existing project.", subcommands = {
                ProjectExtensionsList.class,
                ProjectExtensionsCategories.class,
                ProjectExtensionsAdd.class,
                ProjectExtensionsRemove.class })
public class ProjectExtensions implements Callable<Integer> {
}

=== Part 25 ===
Class `com.commerce.backend.model.entity.User` declaration:
@Entity
@Table(name = "user")
public class User
The class uses the following imports:
- from package com.commerce.backend.model.entity: Cart
The class has following members:
public methods:
- User()
- void setId(Long id)
- void setCart(Cart cart)
- void setEmail(String email)
- void setPassword(String password)
- void setFirstName(String firstName)
- void setLastName(String lastName)
- void setCity(String city)
- void setState(String state)
- void setZip(String zip)
- void setEmailVerified(Integer emailVerified)
- void setRegistrationDate(Date registrationDate)
- void setPhone(String phone)
- void setCountry(String country)
- void setAddress(String address)
fields:
- @Column(name = "email_verified")
    private Integer emailVerified;
- @Column(name = "password")
    private String password;


=== Part 26 ===
Class `org.springframework.samples.petclinic.api.dto.VisitDetails` declaration:
public class VisitDetails
The class has following members:
public methods:
- Integer getId()
- Integer getPetId()
- String getDate()
- String getDescription()
fields:
- private Integer petId = null;


=== Part 27 ===
package jakarta.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Temporal {
    jakarta.persistence.TemporalType value()
}

=== Part 28 ===
Class `com.commerce.backend.model.entity.Cart` declaration:
@Entity
@Table(name = "cart")
public class Cart
The class uses the following imports:
- from package com.commerce.backend.model.entity: Discount, CartItem, User
The class has following members:
public methods:
- Cart()
- void setId(Long id)
- void setUser(User user)
- void setCartItemList(List<CartItem> cartItemList)
- void setDiscount(Discount discount)
- void setTotalCartPrice(Float totalCartPrice)
- void setTotalCargoPrice(Float totalCargoPrice)
- void setTotalPrice(Float totalPrice)
- void setDateCreated(Date dateCreated)


=== Part 29 ===
package org.springframework.samples.petclinic.customers.web.mapper;
@Component
public class OwnerEntityMapper implements Mapper<OwnerRequest, Owner> {
    // This is done by hand for simplicity purpose. In a real life use-case we should consider using MapStruct.
    @Override
    public Owner map(final Owner owner, final OwnerRequest request) {
        owner.setAddress(request.address());
        owner.setCity(request.city());
        owner.setTelephone(request.telephone());
        owner.setFirstName(request.firstName());
        owner.setLastName(request.lastName());
        return owner;
    }
}

=== Part 30 ===
package javax.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Column {
    java.lang.String name() default ""
}

=== Part 31 ===
Class `com.commerce.backend.model.request.user.PasswordForgotValidateRequest` declaration:
@PasswordMatches
public class PasswordForgotValidateRequest
The class has following members:
public methods:
- PasswordForgotValidateRequest()
- void setToken(String token)
- void setNewPassword(String newPassword)
- void setNewPasswordConfirm(String newPasswordConfirm)
fields:
- @NotBlank
    private String token;
- @NotBlank
    @Size(min = 6, max = 52)
    private String newPassword;


=== Part 32 ===
package com.commerce.backend.service;
public interface TokenService {
}

=== Part 33 ===
package jakarta.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Column {
    java.lang.String name() default ""
}

=== Part 34 ===
package io.quarkus.cli.image;
@CommandLine.Command(name = "podman", sortOptions = false, showDefaultValues = true, mixinStandardHelpOptions = false, header = "Build a container image using Podman.", description = "%n"
        + "This command will build or push a container image for the project, using Podman.", footer = "%n"
                + "For example (using default values), it will create a container image using with REPOSITORY='${user.name}/<project.artifactId>' and TAG='<project.version>'.", headerHeading = "%n", commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", parameterListHeading = "%n", optionListHeading = "Options:%n")
public class Podman extends BaseImageSubCommand {
}

=== Part 35 ===
package org.springframework.samples.petclinic.customers.web;
@ResponseStatus(value = HttpStatus.NOT_FOUND)
public class ResourceNotFoundException extends RuntimeException {
    public ResourceNotFoundException(String message) { super(message); }
}

=== Part 36 ===
Class `com.commerce.backend.model.entity.Order` declaration:
@Entity
@Table(name = "orders")
public class Order
The class uses the following imports:
- from package com.commerce.backend.model.entity: Discount, OrderDetail, User
The class has following members:
public methods:
- Order()
- void setId(Long id)
- void setUser(User user)
- void setOrderDetailList(List<OrderDetail> orderDetailList)
- void setDiscount(Discount discount)
- void setShipName(String shipName)
- void setShipAddress(String shipAddress)
- void setBillingAddress(String billingAddress)
- void setCity(String city)
- void setState(String state)
- void setZip(String zip)
- void setCountry(String country)
- void setPhone(String phone)
- void setTotalPrice(Float totalPrice)
- void setTotalCargoPrice(Float totalCargoPrice)
- void setDate(Date date)
- void setShipped(Integer shipped)
- void setCargoFirm(String cargoFirm)
- void setTrackingNumber(String trackingNumber)


=== Part 37 ===
package io.quarkus.cli.image;
@CommandLine.Command(name = "push", sortOptions = false, showDefaultValues = true, mixinStandardHelpOptions = false, header = "Push a container image.", description = "%n"
        + "This command will build and push a container image for the project.", footer = "%n", headerHeading = "%n", commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", parameterListHeading = "%n", optionListHeading = "Options:%n")
public class Push extends BaseImageCommand {
}

=== Part 38 ===
Class `com.commerce.backend.model.entity.Discount` declaration:
@Entity
@Table(name = "discount")
public class Discount
The class uses the following imports:
- from package com.commerce.backend.model.entity: Cart, Order
The class has following members:
public methods:
- Discount()
- void setId(Long id)
- void setOrderList(List<Order> orderList)
- void setCartList(List<Cart> cartList)
- void setCode(String code)
- void setDiscountPercent(Integer discountPercent)
- void setStatus(Integer status)


=== Part 39 ===
package org.springframework.samples.petclinic.api.application;
@Component
public class CustomersServiceClient {
    private final WebClient.Builder webClientBuilder;
    public Mono<OwnerDetails> getOwner(final int ownerId) {
        return webClientBuilder.build().get()
            .uri("http://customers-service/owners/{ownerId}", ownerId)
            .retrieve()
            .bodyToMono(OwnerDetails.class);
    }
public CustomersServiceClient(org.springframework.web.reactive.function.client.WebClient.Builder webClientBuilder)
}

=== Part 40 ===
package io.quarkus.cli.image;
@CommandLine.Command(name = "podman", sortOptions = false, showDefaultValues = true, mixinStandardHelpOptions = false, header = "Build a container image using Podman.", description = "%n"
        + "This command will build or push a container image for the project, using Podman.", footer = "%n"
                + "For example (using default values), it will create a container image using with REPOSITORY='${user.name}/<project.artifactId>' and TAG='<project.version>'.", headerHeading = "%n", commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", parameterListHeading = "%n", optionListHeading = "Options:%n")
public class Podman extends BaseImageSubCommand {
}

=== Part 41 ===
package com.commerce.backend.model.event;
public class OnRegistrationCompleteEvent extends ApplicationEvent {
    private User user;
    private String token;
    public OnRegistrationCompleteEvent(User user, String token) {
        super(user);
        this.user = user;
        this.token = token;
    }
}

=== Part 42 ===
Class `ProductVariant` declaration:
@Entity
@Table(name = "product_variant")
public class ProductVariant
The class uses the following imports:
- from package com.commerce.backend.model.entity: Color, Product
The class has following members:
public methods:
- ProductVariant()
- void setId(Long id)
- void setProduct(Product product)
- void setColor(Color color)
- void setWidth(String width)
- void setHeight(String height)
- void setComposition(String composition)
- void setPrice(Float price)
- void setCargoPrice(Float cargoPrice)
- void setTaxPercent(Float taxPercent)
- void setImage(String image)
- void setThumb(String thumb)
- void setStock(Integer stock)
- void setSellCount(Integer sellCount)
- void setLive(Integer live)


=== Part 43 ===
package com.commerce.backend.dao;
@Repository
public interface UserRepository extends CrudRepository<User, Long> {
}

=== Part 44 ===
Class `com.commerce.backend.model.entity.Product` declaration:
@Entity
@Table(name = "product")
public class Product
The class uses the following imports:
- from package com.commerce.backend.model.entity: ProductVariant, ProductCategory
The class has following members:
public methods:
- Product()
- void setId(Long id)
- void setProductCategory(ProductCategory productCategory)
- void setProductVariantList(List<ProductVariant> productVariantList)
- void setSku(String sku)
- void setName(String name)
- void setUrl(String url)
- void setLongDesc(String longDesc)
- void setDateCreated(Date dateCreated)
- void setLastUpdated(Date lastUpdated)
- void setUnlimited(Integer unlimited)


=== Part 45 ===
Class `OrderDetail` declaration:
@Entity
@Table(name = "order_detail")
public class OrderDetail
The class uses the following imports:
- from package com.commerce.backend.model.entity: ProductVariant, Order
The class has following members:
public methods:
- OrderDetail()
- void setId(Long id)
- void setOrder(Order order)
- void setProductVariant(ProductVariant productVariant)
- void setAmount(Integer amount)


=== Part 46 ===
package jakarta.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface Column {
    java.lang.String name() default ""
}

=== Part 47 ===
package com.commerce.backend.model.entity;
@Entity
@Table(name = "product_category")
public class ProductCategory {
public ProductCategory()
public void setId(java.lang.Long id)
public void setName(java.lang.String name)
}

=== Part 48 ===
package javax.persistence;
@java.lang.annotation.Repeatable(javax.persistence.JoinColumns.class)
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface JoinColumn {
    java.lang.String name() default ""
    boolean nullable() default true
}

=== Part 49 ===
package org.springframework.samples.petclinic.customers.model;
/**
 * Repository class for <code>Owner</code> domain objects All method names are compliant with Spring Data naming
 * conventions so this interface can easily be extended for Spring Data See here: http://static.springsource.org/spring-data/jpa/docs/current/reference/html/jpa.repositories.html#jpa.query-methods.query-creation

 */
public interface OwnerRepository extends JpaRepository<Owner, Integer> {
}

=== Part 50 ===
package io.quarkus.cli;
@CommandLine.Command(name = "quarkus", subcommands = {
        Create.class,
        Build.class,
        Dev.class,
        Run.class,
        Test.class,
        Config.class,
        ProjectExtensions.class,
        Image.class,
        Deploy.class,
        Registry.class,
        Info.class,
        Update.class,
        Version.class,
        CliPlugins.class,
        Completion.class }, scope = ScopeType.INHERIT, sortOptions = false, showDefaultValues = true, versionProvider = Version.class, subcommandsRepeatable = false, mixinStandardHelpOptions = false, commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", optionListHeading = "Options:%n", headerHeading = "%n", parameterListHeading = "%n")
public class QuarkusCli implements QuarkusApplication, Callable<Integer> {
    @CommandLine.Mixin(name = "output")
    OutputOptionMixin output;
    public OutputOptionMixin getOutput() { return output; }
}

=== Part 51 ===
package com.commerce.backend.model.entity;
@Entity
@Table(name = "password_reset_token")
public class PasswordForgotToken {
    @Column(name = "token")
    private String token;
    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(nullable = false, name = "user_id")
    private User user;
    @Column(name = "expiry_date")
    private Date expiryDate;
}

=== Part 52 ===
package io.quarkus.cli.deploy;
@CommandLine.Command(name = "knative", sortOptions = false, showDefaultValues = true, mixinStandardHelpOptions = false, header = "Perform the deploy action on Knative.", description = "%n"
        + "The command will deploy the application on Knative.", footer = "%n"
                + "For example (using default values), it will create a Deployment named '<project.artifactId>' using the image with REPOSITORY='${user.name}/<project.artifactId>' and TAG='<project.version>' and will deploy it to the target cluster.", headerHeading = "%n", commandListHeading = "%nCommands:%n", synopsisHeading = "%nUsage: ", parameterListHeading = "%n", optionListHeading = "Options:%n")
public class Knative extends BaseKubernetesDeployCommand {
}

=== Part 53 ===
package io.quarkus.panacheql.internal;
@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class HqlParser extends Parser {
    @SuppressWarnings("CheckReturnValue")
	public static class StatementContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SelectStatementContext extends ParserRuleContext {
        public SelectStatementContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SubqueryContext extends ParserRuleContext {
        public SubqueryContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TargetEntityContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DeleteStatementContext extends ParserRuleContext {
        public DeleteStatementContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class UpdateStatementContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SetClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AssignmentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InsertStatementContext extends ParserRuleContext {
        public InsertStatementContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TargetFieldsContext extends ParserRuleContext {
        public TargetFieldsContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ValuesListContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ValuesContext extends ParserRuleContext {
        public ValuesContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class WithClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CteContext extends ParserRuleContext {
        public CteContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CteAttributesContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SearchClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SearchSpecificationsContext extends ParserRuleContext {
        public SearchSpecificationsContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SearchSpecificationContext extends ParserRuleContext {
        public SearchSpecificationContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CycleClauseContext extends ParserRuleContext {
        public CycleClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class QueryExpressionContext extends ParserRuleContext {
        public QueryExpressionContext(ParserRuleContext parent, int invokingState)
        public QueryExpressionContext()
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SetQueryGroupContext extends QueryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SimpleQueryGroupContext extends QueryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OrderedQueryContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class QueryOrderExpressionContext extends OrderedQueryContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class QuerySpecExpressionContext extends OrderedQueryContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NestedQueryExpressionContext extends OrderedQueryContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SetOperatorContext extends ParserRuleContext {
        public SetOperatorContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class QueryOrderContext extends ParserRuleContext {
        public QueryOrderContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class QueryContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FromClauseContext extends ParserRuleContext {
        public FromClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityWithJoinsContext extends ParserRuleContext {
        public EntityWithJoinsContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FromRootContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class RootSubqueryContext extends FromRootContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class RootEntityContext extends FromRootContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityNameContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class VariableContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CrossJoinContext extends ParserRuleContext {
        public CrossJoinContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JpaCollectionJoinContext extends ParserRuleContext {
        public JpaCollectionJoinContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JoinContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JoinTypeContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JoinTargetContext extends ParserRuleContext {
        public JoinTargetContext(ParserRuleContext parent, int invokingState)
        public JoinTargetContext()
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JoinPathContext extends JoinTargetContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JoinSubqueryContext extends JoinTargetContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JoinRestrictionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SelectClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SelectionListContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SelectionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SelectExpressionContext extends ParserRuleContext {
        public SelectExpressionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MapEntrySelectionContext extends ParserRuleContext {
        public MapEntrySelectionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InstantiationContext extends ParserRuleContext {
        public InstantiationContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InstantiationTargetContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InstantiationArgumentsContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InstantiationArgumentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InstantiationArgumentExpressionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JpaSelectObjectSyntaxContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SimplePathContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SimplePathElementContext extends ParserRuleContext {
        public SimplePathElementContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PathContext extends ParserRuleContext {
        public PathContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PathContinuationContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SyntacticDomainPathContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GeneralPathFragmentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IndexedPathAccessFragmentContext extends ParserRuleContext {
        public IndexedPathAccessFragmentContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TreatedNavigablePathContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollectionValueNavigablePathContext extends ParserRuleContext {
        public CollectionValueNavigablePathContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MapKeyNavigablePathContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GroupByClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GroupByExpressionContext extends ParserRuleContext {
        public GroupByExpressionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class HavingClauseContext extends ParserRuleContext {
        public HavingClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OrderByClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OrderByFragmentContext extends ParserRuleContext {
        public OrderByFragmentContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SortSpecificationContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NullsPrecedenceContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SortExpressionContext extends ParserRuleContext {
        public SortExpressionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SortDirectionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollateFunctionContext extends ParserRuleContext {
        public CollateFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollationContext extends ParserRuleContext {
        public CollationContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LimitClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FetchClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FetchCountOrPercentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ParameterOrIntegerLiteralContext extends ParserRuleContext {
        public ParameterOrIntegerLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ParameterOrNumberLiteralContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class WhereClauseContext extends ParserRuleContext {
        public WhereClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PredicateContext extends ParserRuleContext {
        public PredicateContext(ParserRuleContext parent, int invokingState)
        public PredicateContext()
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IsDistinctFromPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class BetweenPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExistsPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AndPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IsFalsePredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GroupedPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LikePredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ComparisonPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExistsCollectionPartPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NegatedPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class BooleanExpressionPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OrPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MemberOfPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IsEmptyPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IsNullPredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IsTruePredicateContext extends PredicateContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ComparisonOperatorContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InListContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SubqueryInListContext extends InListContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PersistentCollectionReferenceInListContext extends InListContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ParamInListContext extends InListContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExplicitTupleInListContext extends InListContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LikeEscapeContext extends ParserRuleContext {
        public LikeEscapeContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExpressionContext extends ParserRuleContext {
        public ExpressionContext(ParserRuleContext parent, int invokingState)
        public ExpressionContext()
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AdditionExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FromDurationExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class BarePrimaryExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TupleExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class UnaryExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GroupedExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ConcatenationExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MultiplicationExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ToDurationExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SubqueryExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class UnaryNumericLiteralExpressionContext extends ExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PrimaryExpressionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FunctionExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LiteralExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ParameterExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityTypeExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityIdExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityVersionExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GeneralPathExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityNaturalIdExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CaseExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ToOneFkExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SyntacticPathExpressionContext extends PrimaryExpressionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExpressionOrPredicateContext extends ParserRuleContext {
        public ExpressionOrPredicateContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollectionQuantifierContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ElementValueQuantifierContext extends ParserRuleContext {
        public ElementValueQuantifierContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IndexKeyQuantifierContext extends ParserRuleContext {
        public IndexKeyQuantifierContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ElementsValuesQuantifierContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IndicesKeysQuantifierContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MultiplicativeOperatorContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AdditiveOperatorContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SignOperatorContext extends ParserRuleContext {
        public SignOperatorContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityTypeReferenceContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityIdReferenceContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityVersionReferenceContext extends ParserRuleContext {
        public EntityVersionReferenceContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EntityNaturalIdReferenceContext extends ParserRuleContext {
        public EntityNaturalIdReferenceContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ToOneFkReferenceContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CaseListContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SimpleCaseListContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SimpleCaseWhenContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CaseOtherwiseContext extends ParserRuleContext {
        public CaseOtherwiseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SearchedCaseListContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SearchedCaseWhenContext extends ParserRuleContext {
        public SearchedCaseWhenContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LiteralContext extends ParserRuleContext {
        public LiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class BooleanLiteralContext extends ParserRuleContext {
        public BooleanLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NumericLiteralContext extends ParserRuleContext {
        public NumericLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class BinaryLiteralContext extends ParserRuleContext {
        public BinaryLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TemporalLiteralContext extends ParserRuleContext {
        public TemporalLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DateTimeLiteralContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LocalDateTimeLiteralContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ZonedDateTimeLiteralContext extends ParserRuleContext {
        public ZonedDateTimeLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetDateTimeLiteralContext extends ParserRuleContext {
        public OffsetDateTimeLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DateLiteralContext extends ParserRuleContext {
        public DateLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TimeLiteralContext extends ParserRuleContext {
        public TimeLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DateTimeContext extends ParserRuleContext {
        public DateTimeContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LocalDateTimeContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ZonedDateTimeContext extends ParserRuleContext {
        public ZonedDateTimeContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetDateTimeContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetDateTimeWithMinutesContext extends ParserRuleContext {
        public OffsetDateTimeWithMinutesContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DateContext extends ParserRuleContext {
        public DateContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TimeContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetContext extends ParserRuleContext {
        public OffsetContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetWithMinutesContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class YearContext extends ParserRuleContext {
        public YearContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MonthContext extends ParserRuleContext {
        public MonthContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DayContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class HourContext extends ParserRuleContext {
        public HourContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class MinuteContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SecondContext extends ParserRuleContext {
        public SecondContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ZoneIdContext extends ParserRuleContext {
        public ZoneIdContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JdbcTimestampLiteralContext extends ParserRuleContext {
        public JdbcTimestampLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JdbcDateLiteralContext extends ParserRuleContext {
        public JdbcDateLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JdbcTimeLiteralContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GenericTemporalLiteralTextContext extends ParserRuleContext {
        public GenericTemporalLiteralTextContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GeneralizedLiteralContext extends ParserRuleContext {
        public GeneralizedLiteralContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GeneralizedLiteralTypeContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GeneralizedLiteralTextContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ParameterContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NamedParameterContext extends ParameterContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PositionalParameterContext extends ParameterContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JpaNonstandardFunctionContext extends ParserRuleContext {
        public JpaNonstandardFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class JpaNonstandardFunctionNameContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GenericFunctionContext extends ParserRuleContext {
        public GenericFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GenericFunctionNameContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class GenericFunctionArgumentsContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollectionSizeFunctionContext extends ParserRuleContext {
        public CollectionSizeFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollectionAggregateFunctionContext extends ParserRuleContext {
        public CollectionAggregateFunctionContext(ParserRuleContext parent, int invokingState)
        public CollectionAggregateFunctionContext()
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IndexAggregateFunctionContext extends CollectionAggregateFunctionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ElementAggregateFunctionContext extends CollectionAggregateFunctionContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CollectionFunctionMisuseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AggregateFunctionContext extends ParserRuleContext {
        public AggregateFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EveryFunctionContext extends ParserRuleContext {
        public EveryFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AnyFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class EveryAllQuantifierContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class AnySomeQuantifierContext extends ParserRuleContext {
        public AnySomeQuantifierContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ListaggFunctionContext extends ParserRuleContext {
        public ListaggFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OnOverflowClauseContext extends ParserRuleContext {
        public OnOverflowClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class WithinGroupClauseContext extends ParserRuleContext {
        public WithinGroupClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FilterClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NullsClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NthSideClauseContext extends ParserRuleContext {
        public NthSideClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OverClauseContext extends ParserRuleContext {
        public OverClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PartitionClauseContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FrameClauseContext extends ParserRuleContext {
        public FrameClauseContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FrameStartContext extends ParserRuleContext {
        public FrameStartContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FrameEndContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FrameExclusionContext extends ParserRuleContext {
        public FrameExclusionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class StandardFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CastFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CastTargetContext extends ParserRuleContext {
        public CastTargetContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CastTargetTypeContext extends ParserRuleContext {
        public String fullTargetName;
        public IdentifierContext i;
        public IdentifierContext c;
        public CastTargetTypeContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SubstringFunctionContext extends ParserRuleContext {
        public SubstringFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SubstringFunctionStartArgumentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class SubstringFunctionLengthArgumentContext extends ParserRuleContext {
        public SubstringFunctionLengthArgumentContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TrimFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TrimSpecificationContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TrimCharacterContext extends ParserRuleContext {
        public TrimCharacterContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PadFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PadSpecificationContext extends ParserRuleContext {
        public PadSpecificationContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PadCharacterContext extends ParserRuleContext {
        public PadCharacterContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PadLengthContext extends ParserRuleContext {
        public PadLengthContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OverlayFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OverlayFunctionStringArgumentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OverlayFunctionReplacementArgumentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OverlayFunctionStartArgumentContext extends ParserRuleContext {
        public OverlayFunctionStartArgumentContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OverlayFunctionLengthArgumentContext extends ParserRuleContext {
        public OverlayFunctionLengthArgumentContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CurrentDateFunctionContext extends ParserRuleContext {
        public CurrentDateFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CurrentTimeFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CurrentTimestampFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class InstantFunctionContext extends ParserRuleContext {
        public InstantFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LocalDateTimeFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class OffsetDateTimeFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LocalDateFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class LocalTimeFunctionContext extends ParserRuleContext {
        public LocalTimeFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FormatFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class FormatContext extends ParserRuleContext {
        public FormatContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExtractFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TruncFunctionContext extends ParserRuleContext {
        public TruncFunctionContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class ExtractFieldContext extends ParserRuleContext {
        public ExtractFieldContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DatetimeFieldContext extends ParserRuleContext {
        public DatetimeFieldContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DayFieldContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class WeekFieldContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class TimeZoneFieldContext extends ParserRuleContext {
        public TimeZoneFieldContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class DateOrTimeFieldContext extends ParserRuleContext {
        public DateOrTimeFieldContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PositionFunctionContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PositionFunctionPatternArgumentContext extends ParserRuleContext {
        public PositionFunctionPatternArgumentContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class PositionFunctionStringArgumentContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class CubeContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class RollupContext extends ParserRuleContext {
    }
    @SuppressWarnings("CheckReturnValue")
	public static class NakedIdentifierContext extends ParserRuleContext {
        public NakedIdentifierContext(ParserRuleContext parent, int invokingState)
    }
    @SuppressWarnings("CheckReturnValue")
	public static class IdentifierContext extends ParserRuleContext {
        public IdentifierContext(ParserRuleContext parent, int invokingState)
    }
}

=== Part 54 ===
package javax.persistence;
@java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})
@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
public @interface OneToOne {
    javax.persistence.FetchType fetch() default javax.persistence.FetchType.EAGER
}

=== Part 55 ===
package com.commerce.backend.model.event;
public class OnPasswordForgotRequestEvent extends ApplicationEvent {
    private User user;
    private String token;
    public OnPasswordForgotRequestEvent(User user, String token) {
        super(user);
        this.user = user;
        this.token = token;
    }
}

=== Part 56 ===
package io.quarkus.cli;
@CommandLine.Command(name = "completion", version = "generate-completion "
        + CommandLine.VERSION, header = "bash/zsh completion:  source <(${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME})", helpCommand = true)
public class Completion extends GenerateCompletion {
}

=== Part 57 ===
package io.quarkus.cli;
@CommandLine.Command(name = "dev", showEndOfOptionsDelimiterInUsageHelp = true, header = "Run the current project in dev (live coding) mode.")
public class Dev extends BaseBuildCommand implements Callable<Integer> {
}

=== Part 58 ===
package com.commerce.backend.error.exception;
public class InvalidArgumentException extends RuntimeException {
    public InvalidArgumentException(String s) { super(s); }
}

=== Part 59 ===
package com.commerce.backend.error.exception;
public class ResourceNotFoundException extends RuntimeException {
    public ResourceNotFoundException(String s) { super(s); }
}

=== Part 60 ===
package io.quarkus.cli;
@CommandLine.Command(name = "test", showEndOfOptionsDelimiterInUsageHelp = true, header = "Run the current project in continuous testing mode.")
public class Test extends BaseBuildCommand implements Callable<Integer> {
}

=== Part 61 ===
package io.quarkus.cli;
@CommandLine.Command(name = "test", showEndOfOptionsDelimiterInUsageHelp = true, header = "Run the current project in continuous testing mode.")
public class Test extends BaseBuildCommand implements Callable<Integer> {
}

=== Part 62 ===
package com.commerce.backend.model.entity;
@Entity
@Table(name = "verification_token")
public class VerificationToken {
    @Column(name = "token")
    private String token;
    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(nullable = false, name = "user_id")
    private User user;
    @Column(name = "expiry_date")
    private Date expiryDate;
}

=== Part 63 ===
package com.commerce.backend.validator;
@Target({TYPE, ANNOTATION_TYPE})
@Retention(RUNTIME)
@Constraint(validatedBy = PasswordMatchesValidator.class)
@Documented
public @interface PasswordMatches {
}

=== Part 64 ===
package io.quarkus.cli;
@CommandLine.Command(name = "list", aliases = "ls", header = "List platforms and extensions. ", footer = {
        "%nList modes:%n",
        "(relative). Active when invoked within a project unless an explicit release is specified. " +
                "The current project configuration will determine what extensions are listed, " +
                "with installed (available) extensions listed by default.%n",
        "(absolute). Active when invoked outside of a project or when an explicit release is specified. " +
                "All extensions for the specified release will be listed. " +
                "The CLI release will be used if this command is invoked outside of a project and no other release is specified.%n" })
public class ProjectExtensionsList extends BaseBuildCommand implements Callable<Integer> {
}

=== Part 65 ===
package javax.persistence;
public enum FetchType {
 EAGER
}


Remember: Your response MUST be ONLY the list, e.g. [1, 3, 5]
